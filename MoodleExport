/**
 *  MoodleExport.gs – Moodle XML exporter
 *  ------------------------------------------------------------------
 */

'use strict';

function MoodleExport_createExportFiles(qs, images, projectFolder, quizTitle) {
  const moodleFolder    = projectFolder.createFolder('MoodleExport');
  const resourcesFolder = moodleFolder   .createFolder('resources');

  const imageMap = Moodle_processImages(images, resourcesFolder);
  const xml       = Moodle_createQuizXML(quizTitle, qs, imageMap);
  const xmlFile   = moodleFolder.createFile('moodle.xml', xml, XML_MIME);
  const manifest  = Moodle_createManifest(quizTitle, imageMap);
  const maniFile  = moodleFolder.createFile('imsmanifest.xml', manifest, XML_MIME);

  const blobs = [
    maniFile.getBlob().setName('imsmanifest.xml'),
    xmlFile .getBlob().setName('moodle.xml')
  ];
  Moodle_pushBlobs(blobs, resourcesFolder, 'resources');

  const zip = Utilities.zip(blobs, quizTitle + '_Moodle.zip');
  const out = moodleFolder.createFile(zip);
  PropertiesService.getScriptProperties()
        .setProperties({ lastExportFileId: out.getId(),
                         lastExportFileName: out.getName() });

  return { success: true, fileUrl: out.getUrl(), exportFolderUrl: moodleFolder.getUrl() };
}

/*──────── helpers ────────*/

function Moodle_processImages(images, resourcesFolder) {
  const map = new Map();
  if (!images) return map;
  images.forEach(function (img) {
    if (!img.blob) return;
    resourcesFolder.createFile(img.blob).setName(img.filename);
    map.set(img.filename, true);
  });
  return map;
}

function Moodle_pushBlobs(arr, folder, prefix) {
  const it = folder.getFiles();
  while (it.hasNext()) arr.push(it.next().getBlob().setName(prefix + '/' + it.next().getName()));
}

function Moodle_createManifest(title, imgMap) {
  let files = '';
  imgMap.forEach(function (_v, fn) { files += `    <file href="resources/${fn}"/>\n`; });
  return `<?xml version="1.0" encoding="UTF-8"?>
<manifest identifier="MOODLE-MANIFEST">
  <metadata><title>${sanitizeHtml(title)}</title></metadata>
  <resources>${files}  </resources>
</manifest>`;
}

/*──── main Moodle XML ────*/

function Moodle_createQuizXML(title, qs, imageMap) {
  let xml = `<?xml version="1.0" encoding="UTF-8"?>\n<quiz>\n`;
  qs.forEach(function (q, idx) {
    const qNum = idx + 1;
    let stem = q.questionText;
    if (q.hasImages) stem = replaceImageTags(stem, imageMap, qNum);
    xml += `  <question type="multichoice">
    <name><text>Question ${qNum}</text></name>
    <questiontext format="html"><text><![CDATA[${stem}]]></text></questiontext>
    <shuffleanswers>0</shuffleanswers>
    <answernumbering>abc</answernumbering>\n`;
    q.options.forEach(function (opt, i) {
      const fraction = (i === q.correctAnswerIndex) ? 100 : 0;
      let txt = opt.hasImages ? opt.text : sanitizeHtml(opt.text);
      if (opt.hasImages) txt = replaceImageTags(txt, imageMap, qNum);
      xml += `    <answer fraction="${fraction}" format="html"><text><![CDATA[${txt}]]></text></answer>\n`;
    });
    xml += `  </question>\n`;
  });
  xml += `</quiz>`;
  return xml;
}
